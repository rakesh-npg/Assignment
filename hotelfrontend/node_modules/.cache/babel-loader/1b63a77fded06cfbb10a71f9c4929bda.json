{"ast":null,"code":"import Vue from 'vue';\nimport axios from 'axios';\nimport VueAxios from 'vue-axios';\nVue.use(VueAxios, axios);\nexport default {\n  data() {\n    return {\n      formData: {\n        customerId: \"\",\n        customerName: \"\",\n        tableId: \"\"\n      },\n      flagData: {\n        editForm: false,\n        formFlag: false,\n        sortArrow: [false, false, false]\n      },\n      tableHeaders: [\"table_id\", \"customer_id\", \"customer_name\", \"count\", \"edit/delete\"],\n      tableData: []\n    };\n  },\n\n  mounted() {\n    this.read();\n  },\n\n  methods: {\n    async validateForm() {\n      this.$refs.form.validate();\n      console.log(this.formData);\n      await axios.post('http://127.0.0.1:3333/cust/create', this.formData).then(resposne => console.log(resposne));\n      this.flagData.formFlag = false;\n      this.read();\n      this.$refs.form.reset();\n    },\n\n    async read() {\n      await axios.get('http://127.0.0.1:3333/cust/read').then(response => {\n        console.log(response);\n        this.tableData = response.data;\n      });\n    },\n\n    async editForm() {\n      this.$refs.form.validate();\n      console.log('edition done');\n      await axios.post('http://127.0.0.1:3333/cust/update', this.formData).then(resposne => console.log(resposne));\n      this.$refs.form.reset();\n      this.flagData.formFlag = false;\n      this.flagData.editForm = false;\n      this.read();\n    },\n\n    async deleteData(data) {\n      console.log(data['table_id']);\n      await axios.delete(`http://127.0.0.1:3333/cust/delete/${data[\"table_id\"]}`);\n      this.read();\n    },\n\n    async sortData(i, head) {\n      let sortType = this.flagData.sortArrow[i] ? 'desc' : 'asc';\n      let tempData = {\n        sortType: sortType,\n        col: head\n      };\n      console.log(tempData);\n      await axios.post('http://127.0.0.1:3333/cust/sort', tempData).then(resposne => {\n        console.log(resposne);\n        this.tableData = resposne.data;\n      });\n      console.log('sortData', head, i);\n      console.log(this.flagData.sortArrow[i]);\n      this.flagData.sortArrow[i] = !this.flagData.sortArrow[i];\n    },\n\n    async searchFunc(data) {\n      console.log(data);\n      let tempData = {\n        searchVal: data\n      };\n      await axios.post('http://127.0.0.1:3333/cust/search', tempData).then(response => {\n        this.tableData = response.data;\n      });\n    },\n\n    editData(data) {\n      console.log('workinf');\n      console.log(data);\n      this.formData.customerId = data.customer_id;\n      this.formData.customerName = data.customer_name;\n      this.formData.tableId = data.table_id;\n      this.flagData.formFlag = true;\n      this.flagData.editForm = true;\n    },\n\n    sortIconFlagDisplay(flag) {\n      if (this.flagData.sortArrow[flag]) return 'mdi-arrow-down';else return 'mdi-arrow-up';\n    },\n\n    clickOut() {\n      this.$refs.form.reset();\n      this.flagData.editForm = false;\n      this.flagData.formFlag = false;\n    }\n\n  }\n};","map":{"version":3,"mappings":"AAiFA;AACA;AACA;AAEAA;AAEA;EACAC;IACA;MACAC;QACAC,cADA;QAEAC,gBAFA;QAGAC;MAHA,CADA;MAMAC;QACAC,eADA;QAEAC,eAFA;QAGAC;MAHA,CANA;MAWAC,kFAXA;MAYAC;IAZA;EAgBA,CAlBA;;EAoBAC;IACA;EACA,CAtBA;;EAwBAC;IACA;MACA;MACAC;MACA,qEACAC,IADA,CACAC,iCADA;MAEA;MACA;MACA;IACA,CATA;;IAWA;MACA;QACAF;QACA;MACA,CAHA;IAIA,CAhBA;;IAkBA;MACA;MACAA;MACA,qEACAC,IADA,CACAC,iCADA;MAEA;MACA;MACA;MACA;IACA,CA3BA;;IA6BA;MACAF;MACA;MACA;IACA,CAjCA;;IAkCA;MACA;MACA;QACAG,kBADA;QAEAC;MAFA;MAIAJ;MACA;QACAA;QACA;MACA,CAHA;MAIAA;MACAA;MACA;IACA,CAhDA;;IAkDA;MACAA;MACA;QACAK;MADA;MAIA;QACA;MACA,CAFA;IAGA,CA3DA;;IA6DAC;MACAN;MACAA;MACA;MACA;MACA;MACA;MACA;IAEA,CAtEA;;IAwEAO;MAEA,mCACA,wBADA,KAGA;IACA,CA9EA;;IAgFAC;MACA;MACA;MACA;IACA;;EApFA;AAxBA","names":["Vue","data","formData","customerId","customerName","tableId","flagData","editForm","formFlag","sortArrow","tableHeaders","tableData","mounted","methods","console","then","resposne","sortType","col","searchVal","editData","sortIconFlagDisplay","clickOut"],"sourceRoot":"src/components","sources":["CustomerTable.vue"],"sourcesContent":["<template>\n    <div>\n        <SearchBox @searchEmitPop=\"searchFunc\"/>\n\n        <v-btn @click=\"(() => flagData.formFlag = true)\">New Entry</v-btn>\n\n        <v-simple-table>\n            <thead>\n                <tr>\n                   <th\n                   v-for=\"(head, i) in tableHeaders\" :key=\"head\">\n                   {{head}}\n                   <template v-if=\"head != 'edit/delete'\">\n                        <v-icon small @click=\"sortData(i, head)\">{{sortIconFlagDisplay(i)}}</v-icon>\n                   </template>\n                    </th>\n                </tr>\n            </thead>\n            <tbody>\n                <tr\n                v-for=\"data in tableData\" :key=\"data.row_to_json.id\">\n                    <td v-for=\"column in tableHeaders\" :key=\"column\">\n                    \n                        {{data[column]}}\n\n                    <template v-if=\"column == 'edit/delete'\">\n                        <v-icon small @click=\"editData(data)\">mdi-pencil</v-icon>\n                        <v-icon small @click=\"deleteData(data)\">mdi-delete</v-icon>\n                    </template>\n                </td>\n                </tr>\n            </tbody>\n\n        </v-simple-table>\n\n        <v-dialog v-model=\"flagData.formFlag\" @click:outside=\"clickOut\">   \n            <v-card>\n                    <v-card-title class=\"text-h5 grey lighten-2\">\n                    New Entry   \n                    </v-card-title>\n\n                        \n                    <v-form\n                    ref=\"form\"\n                    v-model=\"valid\"\n                    lazy-validation\n                    >\n\n                        \n                        <v-text-field\n                        v-model=\"formData.customerId\"\n                        label=\"ID\">\n                        \n                        </v-text-field>\n                \n                        <v-text-field\n                        v-model=\"formData.customerName\"\n                        label=\"Name\">\n                        \n                        </v-text-field>\n            \n                        <v-btn @click=\"validateForm\" v-if=\"!flagData.editForm\">\n                        Submit\n                        </v-btn>\n                        \n                        <v-btn @click=\"editForm\" v-if=\"flagData.editForm\">\n                        Edit\n                        </v-btn>\n\n                    </v-form>\n\n                </v-card>\n            </v-dialog> \n\n          \n        \n    </div>\n</template>\n\n\n<script>\nimport Vue from 'vue';\nimport axios from 'axios';\nimport VueAxios from 'vue-axios';\n\nVue.use(VueAxios, axios)\n\nexport default{\n    data() {\n        return {\n            formData:{\n                customerId: \"\", \n                customerName: \"\",  \n                tableId: \"\", \n            }, \n            flagData: {\n                editForm: false,\n                formFlag: false, \n                sortArrow: [false, false, false],  \n            }, \n            tableHeaders: [\"table_id\", \"customer_id\", \"customer_name\", \"count\", \"edit/delete\"], \n            tableData: [\n            ]\n\n        }\n    },\n\n    mounted() {\n        this.read() \n    }, \n\n    methods: {\n        async validateForm() {\n            this.$refs.form.validate() \n            console.log(this.formData)\n            await axios.post('http://127.0.0.1:3333/cust/create', this.formData)\n            .then((resposne) => console.log(resposne))\n            this.flagData.formFlag = false \n            this.read() \n            this.$refs.form.reset() \n        },\n\n        async read() {\n            await axios.get('http://127.0.0.1:3333/cust/read').then((response) => {\n                console.log(response)\n                this.tableData = response.data\n            })\n        }, \n\n        async editForm() {\n            this.$refs.form.validate() \n            console.log('edition done')\n            await axios.post('http://127.0.0.1:3333/cust/update', this.formData)\n            .then((resposne) => console.log(resposne))\n            this.$refs.form.reset() \n            this.flagData.formFlag = false \n            this.flagData.editForm = false\n            this.read() \n        },\n\n        async deleteData(data) {\n            console.log(data['table_id'])\n            await axios.delete(`http://127.0.0.1:3333/cust/delete/${data[\"table_id\"]}`)\n            this.read() \n        },\n        async sortData(i, head) {\n            let sortType = this.flagData.sortArrow[i] ? 'desc' : 'asc'\n            let tempData = {\n                sortType: sortType, \n                col: head\n            } \n            console.log(tempData)\n            await axios.post('http://127.0.0.1:3333/cust/sort', tempData).then((resposne) => {\n                console.log(resposne)\n                this.tableData = resposne.data \n            })\n            console.log('sortData', head, i)\n            console.log(this.flagData.sortArrow[i])\n            this.flagData.sortArrow[i] = !this.flagData.sortArrow[i]\n        }, \n\n        async searchFunc(data) {\n            console.log(data)\n            let tempData = {\n                searchVal : data\n            }\n\n            await axios.post('http://127.0.0.1:3333/cust/search', tempData).then((response) => {\n                this.tableData = response.data\n            })\n        }, \n\n        editData(data) {\n            console.log('workinf')\n            console.log(data)\n            this.formData.customerId = data.customer_id\n            this.formData.customerName = data.customer_name \n            this.formData.tableId = data.table_id\n            this.flagData.formFlag = true \n            this.flagData.editForm = true\n            \n        }, \n\n        sortIconFlagDisplay(flag) {\n            \n            if(this.flagData.sortArrow[flag]) \n            return 'mdi-arrow-down'\n            else \n            return 'mdi-arrow-up'\n        }, \n\n        clickOut(){\n            this.$refs.form.reset() \n            this.flagData.editForm = false \n            this.flagData.formFlag = false \n        },\n    }, \n}\n\n</script>"]},"metadata":{},"sourceType":"module"}